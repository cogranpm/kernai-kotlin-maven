package com.parinherm.entity

import java.time.LocalDate
import kotlin.properties.Delegates

class {{#capitalize entityDef.name}}{{/capitalize}}(override var id: Long = 0, {{#each (getForeignKeysByView this)}}var {{#decapitalize this.entityDef.name}}{{/decapitalize}}Id: Long,{{/each}} {{#each fieldDefinitions}}{{name}}: {{#translateDataTypeDef dataTypeDef}} {{/translateDataTypeDef}}{{#unless @last}}, {{/unless}}{{/each}}): ModelObject(), IBeanDataEntity  {

    {{#each fieldDefinitions}}var {{name}}: {{#translateDataTypeDef dataTypeDef}} {{/translateDataTypeDef}} by Delegates.observable({{name}}, observer)
    {{/each}}

    override fun getColumnValueByIndex(index: Int): String {
        return when (index) {
            {{#each fieldDefinitions}} {{@index}} -> {{#translateColumnValue this}} {{/translateColumnValue}}
            {{/each}}
            else -> ""
        }
    }

    override fun toString(): String {
        return "{{entityDef.name}}(id=$id, {{#each fieldDefinitions}}{{name}}=${{name}}{{#unless @last}}, {{/unless}}{{/each}})"
    }

    companion object Factory {
        fun make(): {{entityDef.name}}{
            return {{entityDef.name}}(
                0,
                {{#each (getForeignKeysByView this)}}0,{{/each}}
                {{#each fieldDefinitions}} {{#translateDefaultValue this}} {{/translateDefaultValue}}{{#unless @last}}, {{/unless}}
                {{/each}}
            )
        }
    }
}