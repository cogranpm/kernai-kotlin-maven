@model Portal.Web.Models.{{viewDef.entityDef.name | capitalize}}Search
@{
    Layout = "_EmptyLayout";
}

<div class="div-datatables">
    <table id="listTable" class="table table-hover table-sm table-hover">
        <thead>
        <tr>
{%  set numCols = 1 %}
{% for field in viewDef.sortedFields %}
{% set showInList = field.configMap.getOrDefault("showInList", true) %}
{% if showInList == true %}              <th class="border-bottom">{{ field.title }}</th>
{% set numCols = numCols + 1 %}
{% endif %}
{% endfor %}
{% for childViewDef in viewDef.childViews %}
        <th class="border-bottom">{{ childViewDef.title }}</th>
 {% set numCols = numCols + 1 %}
 {% endfor %}
            <th class="border-bottom"></th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td colspan="{{ numCols }}" class="pt-4">@await Html.PartialAsync("_loadingsm")</td>
        </tr>
        <tr>
            <td colspan="{{ numCols }}"></td>
        </tr>
        </tbody>
    </table>
</div>
<style type="text/css">
    #invoiceListTable_filter {
        display: none;
    }
</style>
<script type="module">
    import { initialize, load, listViewBack } from "./{{viewDef.entityDef.name}}/list.js";
    const model = {
        criteria: @Portal.Web.Helpers.MvcStringHelpers.ToJavaScriptObjectString(Model),
        loadingHtml: '@await Html.PartialAsync("_loading")',
        loadingSmHtml: '@await Html.PartialAsync("_loadingsm")'
    }
    initialize(model);
    window.load = load;
    window.listViewBack = listViewBack;

</script>