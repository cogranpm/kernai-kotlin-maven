using System;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Mvc.Rendering;
using System.Collections.Generic;

namespace Portal.Web.Models
{
    public class {{viewDef.entityDef.name | capitalize}}Display
    {
         public int Id { get; set; }
         {{ fieldProperties(vDef = viewDef) }}

{% for ownerAssociation in viewDef.ownerAssociations %}
{% if ownerAssociation.owningType == "one" and ownerAssociation.ownedType == "many"%}
        public ICollection<{{ ownerAssociation.ownedViewDef.entityDef.name | capitalize }}> {{ ownerAssociation.ownedViewDef.entityDef.name | capitalize }}s { get; set; } = new List<{{ ownerAssociation.ownedViewDef.entityDef.name | capitalize }}>();
{% endif %}
{% endfor %}
	}

{% for ownerAssociation in viewDef.ownerAssociations %}
{% if ownerAssociation.owningType == "one" and ownerAssociation.ownedType == "many"%}
    public class {{ownerAssociation.ownedViewDef.entityDef.name | capitalize }}
    {
         public int Id { get; set; }
         {{ fieldProperties(vDef = ownerAssociation.ownedViewDef) }}
         public int {{ ownerAssociation.ownerViewDef.entityDef.name | capitalize }}Id { get; set; }
         public {{ ownerAssociation.ownerViewDef.entityDef.name | capitalize }}Display {{ ownerAssociation.ownerViewDef.entityDef.name | capitalize }} { get; set; } = null!;
	}
{% endif %}
{% endfor %}


    public class {{viewDef.entityDef.name | capitalize}}Info
    {
         [Required]
         public int Id { get; set; }

         {% for field in viewDef.fieldDefinitions %}

{% if field.required == true %}
         [Required]
{% endif %}
         [Display(Name = "{{ field.title }}")]
{% if field.dataTypeDef == "DATETIME" or field.dataTypeDef == "DATE" or field.dataTypeDef == "TIME" %}
         [DataType(DataType.Date)]
         [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
{% endif %}
{%  set defaultValue = "" %}
{% if field.dataTypeDef == "DATETIME" %} {%  set defaultValue = "= DateTime.Now;" %}{% endif %}
{% if field.dataTypeDef == "DATE" %} {%  set defaultValue = "= DateTime.Now;" %}{% endif %}
{% if field.dataTypeDef == "TIME" %} {%  set defaultValue = "= DateTime.Now;" %}{% endif %}
{% if field.default is not empty and field.default == "YEAR" %}{% set defaultValue = "= DateTime.Now.Year;" %}{% endif %}
         public {{ field.dataTypeDef.dataTypeToCSharpDef }} {{ field.name | capitalize}} { get; set; } {{ defaultValue }}

{% if field.lookupKey is not empty and field.configMap["advancedLookup"] != "true"  %}
        public IList<SelectListItem> {{ field.lookupKey }}s { get; set; }
{% endif %}
{% if field.lookupKey is not empty and field.configMap["advancedLookup"] == "true"  %}
        public {{ field.dataTypeDef.dataTypeToCSharpDef }} {{ field.name | capitalize}}String { get; set; }
{% endif %}

{% endfor %}

         public bool ShouldUseBlankLayout { get; set; }
         public {{viewDef.entityDef.name | capitalize}}Search Criteria { get; set; }
         public Byte[] TimeStamp { get; set; }

		public override string ToString()
		{
			return $"{{viewDef.entityDef.name | capitalize}}Info: {% for field in viewDef.fieldDefinitions %}{{ field.name | capitalize}}:{this.{{ field.name | capitalize}}} {% endfor %}";
		}
    }
}

{% macro fieldProperties(type="text", vDef) %}
 {% for field in vDef.fieldDefinitions %}

         [Display(Name = "{{ field.title }}")]
{% if field.dataTypeDef == "DATETIME" or field.dataTypeDef == "DATE" or field.dataTypeDef == "TIME" %}
         [DataType(DataType.Date)]
         [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
{% endif %}
         public {{ field.dataTypeDef.dataTypeToCSharpDef }} {{ field.name | capitalize}} { get; set; }
{% endfor %}

{% endmacro %}
