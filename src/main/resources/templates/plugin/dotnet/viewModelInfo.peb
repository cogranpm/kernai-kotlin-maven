using System;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Mvc.Rendering;
using System.Collections.Generic;

namespace Portal.Web.Models
{
    public class {{viewDef.entityDef.name | capitalize}}Info
    {
         [Required]
         public int Id { get; set; }

         {% for field in viewDef.fieldDefinitions %}

{% if field.required == true %}
         [Required]
{% endif %}
         [Display(Name = "{{ field.title }}")]
{% if field.dataTypeDef == "DATETIME" or field.dataTypeDef == "DATE" or field.dataTypeDef == "TIME" %}
         [DataType(DataType.Date)]
         [DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
{% endif %}
         public {{ field.dataTypeDef.dataTypeToCSharpDef }} {{ field.name | capitalize}} { get; set; } {% if field.dataTypeDef == "DATETIME" or field.dataTypeDef == "DATE" or field.dataTypeDef == "TIME" %} = DateTime.Now;{% endif %}

{% if field.lookupKey is not empty and field.configMap["advancedLookup"] != "true"  %}
        public IList<SelectListItem> {{ field.lookupKey }}s { get; set; }
{% endif %}
{% if field.lookupKey is not empty and field.configMap["advancedLookup"] == "true"  %}
        public {{ field.dataTypeDef.dataTypeToCSharpDef }} {{ field.name | capitalize}}String { get; set; }
{% endif %}

{% endfor %}

         public bool ShouldUseBlankLayout { get; set; }
         public {{viewDef.entityDef.name | capitalize}}SearchCriteria Criteria { get; set; }

		public override string ToString()
		{
			return $"{{viewDef.entityDef.name | capitalize}}Info: {% for field in viewDef.fieldDefinitions %}{{ field.name | capitalize}}:{this.{{ field.name | capitalize}}} {% endfor %}";
		}
    }
}
