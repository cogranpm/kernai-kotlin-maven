using System;
using System.Linq;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Filters;
using Portal.Core;
using Portal.Service;
using Portal.Web.Models;

namespace Portal.Web.Controllers {

    [Route("{{viewDef.entityDef.name | capitalize}}s")]
    public class {{viewDef.entityDef.name | capitalize}}sController : Controller {

        public const string Heading = "{{viewDef.title}}s";

        private readonly I{{viewDef.entityDef.name | capitalize}}Service _service;

        public {{viewDef.entityDef.name | capitalize}}sController(I{{viewDef.entityDef.name | capitalize}}Service service){
            this._service = service;
        }

        public ViewResult Index(
           {% for field in viewDef.searchFields %}
{{ field.dataTypeDef.dataTypeToCSharpDef }}{{ field.cSharpNullablePostfix }} {{ field.nameAsField }} = null,
{% endfor %}
           string search = null)
        {
            return View("Index", new ProductEarningTypeLookupSearch()
            {
                Title = Heading,
                Criteria = new ProductEarningTypeLookupSearchCriteria()
                {
                {% for field in viewDef.searchFields %}
                {{ field.name | capitalize }} = {{ field.nameAsField }} {% if loop.last %}{% else %},{% endif %}

                {% endfor %}
                }
            });
        }

        [HttpGet]
        [Route("list")]
        public JsonResult ListJson(int draw,
            int start,
            int length,
            [Bind(Prefix = "order[0][column]")] int orderCol,
            [Bind(Prefix = "order[0][dir]")] string orderDir,
            {% for field in viewDef.searchFields %}
{{ field.dataTypeDef.dataTypeToCSharpDef }}{{ field.cSharpNullablePostfix }} {{ field.nameAsField }} = null{% if loop.last %}{% else %},{% endif %}

{% endfor %}
           )
        {
            var dataSort = new DataSortParameters { Length = length, OrderDir = orderDir, OrderCol = orderCol, Start = start };
            var records = this._service.GetForList(
            {% for field in viewDef.searchFields %}
{{ field.nameAsField }},
{% endfor %}
                    dataSort)
                .ToList();

            var result = new ProductEarningTypeLookupListJson
            {
                Draw = draw,
                RecordsTotal = records.Count,
                RecordsFiltered = records.Count(),
                Data = records
            };
            return Json(result);
        }
    }
}