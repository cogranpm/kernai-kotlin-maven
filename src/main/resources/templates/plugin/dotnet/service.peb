{% set baseEntityName = viewDef.entityDef.name | capitalize + "Base" %}
using Microsoft.EntityFrameworkCore;
using Portal.Repository.Domain;
using Portal.Repository.Model.ConklinCentral;
using System;
using System.Linq;
using Portal.Core;
using Portal.Repository;
using System.Collections.Generic;

namespace Portal.Service;

public interface I{{viewDef.entityDef.name | capitalize}}Service : IService<{{baseEntityName}}, int>
{
    IList<{{viewDef.entityDef.name | capitalize}}ForList> GetForList(DataSortParameters dataSort, string search);
    void Update({{baseEntityName}} entity);
    {{baseEntityName}} Add({{baseEntityName}} entity);
    void Delete(int id);
{% for ownerAssociation in viewDef.ownerAssociations %}
{% if ownerAssociation.owningType == "one" %}
    void Delete{{ ownerAssociation.ownedViewDef.entityDef.name | capitalize }}(int parentId, int childId);
{% endif %}
{% endfor %}
}

public class {{viewDef.entityDef.name | capitalize}}Service : BaseService<{{baseEntityName}}, int, I{{viewDef.entityDef.name | capitalize}}Repository>, I{{viewDef.entityDef.name | capitalize}}Service
{
    public {{viewDef.entityDef.name | capitalize}}Service(I{{viewDef.entityDef.name | capitalize}}Repository repository) : base(repository) {

    }

    public IList<{{viewDef.entityDef.name | capitalize}}ForList> GetForList(DataSortParameters dataSort, string search){
        return this.Repository.GetForList(dataSort, search);
    }

    public void Update({{baseEntityName}} entity)
    {
        this.Repository.Update(entity);
    }

    public {{baseEntityName}} Add({{baseEntityName}} entity)
    {
        return this.Repository.Add(entity);
    }

    public void Delete(int id)
    {
        this.Repository.Delete(id);
    }

{% for ownerAssociation in viewDef.ownerAssociations %}
{% if ownerAssociation.owningType == "one" %}
    public void Delete{{ ownerAssociation.ownedViewDef.entityDef.name | capitalize }}(int parentId, int childId)
    {
        this.Repository.Delete{{ ownerAssociation.ownedViewDef.entityDef.name | capitalize }}(parentId, childId);
    }
{% endif %}
{% endfor %}

}

