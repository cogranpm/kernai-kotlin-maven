@using Portal.Core
@model Portal.Web.Models.ProductEarningTypeLookupInfo
@if (Model.ShouldUseBlankLayout)
{
    Layout = "_EmptyLayout";
}


<div class="container-fluid">
	@using (Html.BeginForm("Edit", "{{viewDef.entityDef.name | capitalize}}s", FormMethod.Post, new { id = "editForm" }))
	{
		@Html.AntiForgeryToken()
		@Html.ValidationSummary(true)
		@Html.HiddenFor(model => model.Id)
    {% for field in viewDef.fieldDefinitions %}

		<div class="form-group row">
			<label for="{{ field.nameAsField }}" class="col-sm-2 col-form-label">{{ field.title }}:</label>
			<div class="col-sm-10">
{% if field.lookupKey is not empty and field.configMap["advancedLookup"] == "true" %}
                    @Html.DropDownListFor(model => model.{{ field.name | capitalize }},
                        new List<SelectListItem>(){new SelectListItem(){Text=@Model.{{ field.name | capitalize }}String, Value = @Model.{{ field.name | capitalize }}, Selected=true}},
                        "-- Select {{ field.title }}--",
                        new {
                        data_{{ field.nameAsField }}=$"{@Model.{{ field.name | capitalize }}}",
                        style="width: 100%",
                        name = "{{ field.nameAsField }}",
                        id="{{ field.nameAsField }}",
                        @class = "form-select, select2" })
{% elseif field.lookupKey is not empty %}
                @Html.DropDownListFor(model => model.{{ field.name | capitalize }}, Model.{{ field.lookupKey }}s, "-- Select {{ field.title }}--", new { name = "{{ field.nameAsField }}", @class = "form-select", placeholder = "Enter {{ field.title }}" })
{% else %}
				@Html.EditorFor(model => model.{{ field.name | capitalize }}, new { htmlAttributes = new { name = "{{ field.nameAsField }}", @class = "form-control", placeholder = "Enter {{ field.title}}" } })
{% endif %}
				@Html.ValidationMessageFor(model => model.{{ field.name | capitalize }})
			</div>
		</div>
    {% endfor %}
	}
</div>