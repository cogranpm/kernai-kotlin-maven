@using Portal.Core
@using Portal.Repository
@using Portal.Repository.Model.Enums
@model Portal.Web.Models.{{ parentViewDef.id }}Edit

<div class="tx-right pd-b-5">
	<button class="btn btn-primary btn-sm" id="btnCreate" data-id="@Model.Id" data-bs-toggle="modal" data-bs-target="#addModal">Add New</button>
</div>

<div id="details" class="tab-pane fade active show">
	<div class="table-responsive">
		<table class="table table-striped table-sm mb-0">
			<thead>
				<tr>
{% for field in childViewDef.sortedFields %}
					<th>{{ field.title }}</th>
{%  endfor %}
					<th></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var row in Model.{{ childViewDef.id }}s)
				{
					<tr>
{% for field in childViewDef.sortedFields %}
{% if loop.first %}
{%  set fieldName = field.name  %}
{% if field.referenceViewDefinition is not empty %}
{%  set fieldName = field.name + "String" %}
{% endif %}
                    <td><a href="javascript:;" class="editLink" data-parent-id="@Model.Id" data-id="@row.Id">@row.{{ fieldName | capitalize }}</a></td>
{%  else %}
 					<td>@row.UnitsPerQty</td>
{% endif %}
{%  endfor %}
					<td><a href="javascript:;" class="deleteLink" data-parent-id="@Model.Id" data-id="@row.Id"><i class="fa fa-trash"></i></a></td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

<script type="module">
    import { initApplication } from "./{{ parentViewDef.id | capitalize }}/{{ childViewDef.id | decapitalizeFilter }}.js";
	const model = {
		loadingHtml: '@await Html.PartialAsync("_loading")',
		loadingSmHtml: '@await Html.PartialAsync("_loadingsm")'
	}
	document.onreadystatechange = () => {
		if (document.readyState === "complete") {
			initApplication(model);
		}
	};

</script>
